name: CI/CD Pipeline for Fare-ItBlomr

on:
  push:
    branches: [ "face_krisna" ]
  pull_request:
    branches: [ "face_krisna" ]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  LARAVEL_IMAGE: ${{ secrets.DOCKER_USERNAME }}/laravel-franken
  FACEAPI_IMAGE: ${{ secrets.DOCKER_USERNAME }}/faceapi

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, mysql, zip
        tools: composer:v2

    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        composer install --no-progress --no-suggest --prefer-dist
        composer dump-autoload

    - name: Save vendor directory
      uses: actions/upload-artifact@v4
      with:
        name: backend-vendor
        path: backend/vendor

  test:
    needs: setup
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping -uroot -proot" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Restore vendor directory
      uses: actions/download-artifact@v4
      with:
        name: backend-vendor
        path: backend/vendor

    - name: Verify vendor setup
      run: |
        ls -la backend/vendor/
        [ -f "backend/vendor/autoload.php" ] || (echo "Autoload file missing!" && exit 1)

    - name: Wait for MySQL
      run: |
        for i in {1..10}; do
          if mysqladmin ping -h"127.0.0.1" -uroot -proot --silent; then
            echo "MySQL is ready!"
            break
          else
            echo "Waiting for MySQL... Attempt $i"
            sleep 3
          fi
        done

    - name: Prepare Laravel environment
      working-directory: ./backend
      run: |
        cp .env.example .env
        sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
        sed -i 's/DB_DATABASE=.*/DB_DATABASE=testing/' .env
        sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env
        sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=root/' .env
        php artisan key:generate

    - name: Run migrations and tests
      working-directory: ./backend
      run: |
        php artisan migrate:fresh --force

        mkdir -p public/storage/users
        chmod -R 777 public/storage/users
        
        chmod +x vendor/bin/phpunit
        vendor/bin/phpunit

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/face_krisna' || github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Laravel image
      run: |
        cd backend
        docker build -t $LARAVEL_IMAGE:${{ github.sha }} -f Dockerfile .
        docker push $LARAVEL_IMAGE:${{ github.sha }}

    - name: Build and push FaceAPI image
      run: |
        cd face_detection
        docker build -t $FACEAPI_IMAGE:${{ github.sha }} -f Dockerfile .
        docker push $FACEAPI_IMAGE:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/face_krisna' || github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.1
      with:
        ssh-private-key: ${{ secrets.PRIVATE_SSH_KEY }}

    - name: Deploy to VPS
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd ~/Fare-ItBlomr
          git pull origin ${{ github.ref_name }}
          
          # Update docker-compose with new images
          sed -i "s|image: heshcp78/laravel-franken.*|image: heshcp78/laravel-franken:${{ github.sha }}|g" docker-compose.prod.yml
          sed -i "s|image: heshcp78/faceapi.*|image: heshcp78/faceapi:${{ github.sha }}|g" docker-compose.prod.yml

          
          # Deploy Docker Swarm stack
          docker stack deploy -c docker-compose.prod.yml fare-itblomr
          
          # Wait for services to stabilize
          sleep 30
          
          # Run Laravel migration
          docker exec $(docker ps -q -f name=fare-itblomr_laravel_franken) php artisan migrate --force
          
          # Clean up
          docker system prune -af
        EOF
